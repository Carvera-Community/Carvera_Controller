name: release
on:
  push:
    tags:
      - "v*.*.*"
jobs:
  build-windows-artifacts:
    name: build-windows-${{ matrix.platform }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        platform: [win32]
        include:
          - platform: win32
            arch: x64
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: 3.12
        architecture: ${{ matrix.arch }}

    - name: Install poetry and dependencies
      uses: ./.github/actions/bootstrap-poetry
      with:
        os: windows

    - name: "Install Windows-Mesa OpenGL DLL"
      run: |
        curl -L --output mesa.7z --url https://github.com/pal1000/mesa-dist-win/releases/download/24.2.5/mesa3d-24.2.5-release-msvc.7z
        7z x mesa.7z -o*
        powershell.exe mesa\\systemwidedeploy.cmd 1

    - name: Build release
      run: poetry run python scripts/build.py --os windows

    - name: Rename artifact
      run: poetry run bash ./scripts/rename-release-file.sh windows

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-assets-${{ matrix.platform }}
        path: ${{ github.workspace }}/dist/carveracontroller-community-*-windows-x64.exe
        retention-days: 2

  build-macos-artifacts:
    name: build-macos-${{ matrix.platform }}
    runs-on: ${{ matrix.image }}
    strategy:
      fail-fast: false
      matrix:
        platform: [ Intel, AppleSilicon ]
        include:
          - platform: Intel
            image: macos-13
          - platform: AppleSilicon
            image: macos-14
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: 3.12

    - name: Install poetry and dependencies
      uses: ./.github/actions/bootstrap-poetry
      with:
        os: macos

    - name: Build release
      run: poetry run python scripts/build.py --os macos
    
    - name: Debug
      run: ls ./dist

    - name: Install create-dmg
      run: brew install create-dmg

    - name: Create dmg file
      run: ./scripts/create-dmg.sh

    - name: Rename artifact
      run: poetry run bash ./scripts/rename-release-file.sh macos

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: macos-assets-${{ matrix.platform }}
        path: ${{ github.workspace }}/dist/carveracontroller-community-*.dmg
        retention-days: 2
    
    - name: Upload artifact troubleshootings
      uses: actions/upload-artifact@v4
      with:
        name: linux-assets
        path: ${{ github.workspace }}/dist/carveracontroller.app
        retention-days: 2

  build-linux-artifacts:
    name: build-linux-${{ matrix.platform }}
    runs-on: ${{ matrix.image }}
    strategy:
      fail-fast: false
      matrix:
        platform: [ x64 ]  # github hosted arm runners not standard yet
        include:
          - platform: x64
            image: ubuntu-20.04
          # - platform: aarch64
          #   image: ubuntu-20.04
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: 3.12

    - name: Install poetry and dependencies
      uses: ./.github/actions/bootstrap-poetry
      with:
        os: linux
    
    - name: Install MTDev
      run: sudo apt-get install -y mtdev-tools

    - name: Build release
      run: xvfb-run poetry run python scripts/build.py --os linux

    - name: Rename artifact
      run: poetry run bash ./scripts/rename-release-file.sh linux

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: linux-assets
        path: ${{ github.workspace }}/dist/carveracontroller-community-*.appimage
        retention-days: 2

  build-linux-artifacts-arm:
    name: build-linux-arm
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: make dist folder
      run: mkdir -p ${{ github.workspace }}/dist/

    - uses: pguyot/arm-runner-action@v2
      id: build_image
      with:
        base_image: raspios_lite_arm64:latest
        image_additional_mb: 10240
        copy_artifact_path: dist/carveracontroller-community-*.appimage
        copy_artifact_dest: ${{ github.workspace }}/dist/
        commands: |
          sudo apt-get install -y git python3-dev build-essential xvfb squashfs-tools
          curl -sSL https://install.python-poetry.org | python3 - -y
          export PATH="/home/runner/.local/bin:$PATH"
          poetry config virtualenvs.in-project true
          poetry install
          xvfb-run poetry run python scripts/build.py --os linux
          poetry run bash ./scripts/rename-release-file.sh linux



    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: linux-arm-assets
        path: ${{ github.workspace }}/dist/carveracontroller-community-*.appimage
        retention-days: 2


  build-pypi-artifacts:
    name: build-python
    runs-on: ubuntu-20.04
    permissions:
      id-token: write

    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # all history is required for the dynamic versioning plugin

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: 3.12

    - name: Install poetry and dependencies
      uses: ./.github/actions/bootstrap-poetry
      with:
        os: linux
    
    - name: Add poetry-dynamic-versioning plugin
      run: poetry self add "poetry-dynamic-versioning[plugin]"

    - name: Build python package
      run: poetry build

    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1


  publish-release:
    needs: [ build-windows-artifacts, build-macos-artifacts, build-linux-artifacts ]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Publish release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            windows-assets-*/carveracontroller-community-*-windows-x64.exe
            macos-assets-*/carveracontroller-community-*.dmg
            linux-assets/carveracontroller-community-*.appimage
            macos-assets-*/carveracontroller.app

  publish-release-arm:
    needs: [ build-linux-artifacts-arm ]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Publish release
        uses: softprops/action-gh-release@v2
        with:
          files: linux-arm-assets/carveracontroller-community-*.appimage

